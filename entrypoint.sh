#!/bin/bash

set -e

echo "🧠 Generating terraform.tfvars from injected environment variables..."

# Path to where we want to generate the tfvars
TARGET_DIR="/repo"
TFVARS_FILE="$TARGET_DIR/terraform.tfvars"

# Start fresh
echo "# Auto-generated by entrypoint.sh" > "$TFVARS_FILE"

# List of expected variable names
vars=(
  supabase_token
  supabase_org_id
  supabase_region
  supabase_db_password
  supabase_project_name
)

# Generate the tfvars file
for var in "${vars[@]}"; do
  val="${!var}"

  if [[ -n "$val" ]]; then
    if [[ "$val" =~ ^[0-9]+$ ]]; then
      echo "$var = $val" >> "$TFVARS_FILE"
    else
      echo "$var = \"$val\"" >> "$TFVARS_FILE"
    fi
  else
    echo "⚠️  Warning: $var is not set in the environment"
  fi
done

echo "✅ terraform.tfvars generated at $TFVARS_FILE:"
cat "$TFVARS_FILE"

# Run OpenTofu in the /repo directory
echo "🚀 Running OpenTofu..."
cd "$TARGET_DIR"
tofu init -backend-config="path=$TARGET_DIR/state/terraform.tfstate"
tofu plan
tofu apply -state=$TARGET_DIR/state/terraform.tfstate -auto-approve

# Extract outputs and send to runner
echo "📤 Capturing outputs..."
OUTPUT_JSON=$(tofu output -json)

echo "📡 Sending outputs to runner container..."
echo "$OUTPUT_JSON" | curl --location 'http://host.docker.internal:3030/state/vars' \
  --header 'Content-Type: application/json' \
  --data-binary @-

